{
    "openapi": "3.0.3",
    "info": {
        "title": "Swagger Sample",
        "description": "This is a sample",
        "version": "1.0.0"
    },
    "paths": {
        "/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get All Products",
                "description": "Multiple status values can be provided with comma separated strings",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Products"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid status value"
                    }
                }
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Add a new product",
                "description": "Add a new product",
                "requestBody": {
                    "description": "Create a new product",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Products"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Invalid input"
                    }
                }
            }
        },
        "/products/{id}": {
            "put": {
                "tags": [
                    "Products"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of product that needs to be fetched",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "summary": "Update an existing product",
                "description": "Update an existing product by Id",
                "requestBody": {
                    "description": "Update an existent product in the store",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Products"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Products"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "405": {
                        "description": "Validation exception"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete product by ID",
                "description": "For valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers will generate API errors",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product that needs to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Products": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "title": {
                        "type": "string"
                    },
                    "productDescription": {
                        "type": "string"
                    },
                    "productBrand": {
                        "type": "string"
                    },
                    "price": {
                        "type": "integer",
                        "format": "float"
                    },
                }
            }
        },
        "requestBodies": {
            "Products": {
                "description": "Product object that needs to be added to the store",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Products"
                        }
                    }
                }
            }
        }
    }
}